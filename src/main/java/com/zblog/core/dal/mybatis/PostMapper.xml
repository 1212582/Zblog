<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
      "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zblog.core.dal.mapper.PostMapper">
   
   <select id="loadById" parameterType="java.lang.String" resultType="Post">  
      select id, title, content, categoryid, parent, createTime from post where id = #{id}
   </select>
   
   <select id="loadReadById" parameterType="java.lang.String" resultType="MapContainer">  
      select p.id, p.title, p.content, p.type, p.categoryid, c.name as categoryName, p.parent, p.creator, p.rcount, p.ccount, p.createTime, u.nickName 
      from post p left join category c on p.categoryid=c.id left join user u on p.creator=u.id
      where p.id = #{id}
   </select>
   
   <select id="getNextPost" parameterType="java.lang.String" resultType="Post">
     select id,title from post where type='post' and createTime > 
       (select createTime from post where id=#{postid}) limit 1
   </select>
   
   <select id="getPrevPost" parameterType="java.lang.String" resultType="Post">
     select id,title from post where type='post' and createTime &lt; 
         (select createTime from post where id=#{postid}) order by createTime desc limit 1
   </select>
   
   <select id="list" parameterType="PageModel" resultType="MapContainer">  
      select p.id, p.title, p.excerpt, c.name as categoryName, p.rcount, p.ccount, p.creator, u.nickName, p.createTime
          from post p left join category c on p.categoryid=c.id left join user u on p.creator=u.id
          where p.type=#{query.type} order by p.createTime desc
   </select>
   
   <select id="listPage" resultType="MapContainer" parameterType="boolean">
      <!-- 必须使用_parameter 否则There is no getter for property named 'onlyParent' in 'class java.lang.Boolean'-->
      select id, title, parent from post where type='page' <if test="_parameter"> and parent='Root'</if>
   </select>
   
   <select id="listRecent" parameterType="integer" resultType="string">  
      select id from post where type='post' order by createTime desc limit #{nums}
   </select>
   
   <select id="listByCategory" parameterType="PageModel" resultType="MapContainer">
      select p.id, p.title, p.excerpt, p.creator, p.rcount, u.nickName, p.createTime 
        from post p inner join category c on p.categoryid=c.id left join user u on p.creator=u.id 
        where c.name=#{query.categoryName} and p.type='post' order by p.createTime desc
   </select>
   
   <insert id="insert" parameterType="Post">
      insert into post(id,title,excerpt,content,type,parent,categoryid,pstatus,cstatus,ccount,rcount,createTime,creator,lastUpdate) 
         values(#{id},#{title},#{excerpt},#{content, jdbcType=CLOB},#{type},#{parent},#{categoryid},#{pstatus},#{cstatus},#{ccount},#{rcount},#{createTime},#{creator},#{lastUpdate})
   </insert>
   
   <update id="update" parameterType="Post">
     update post set title=#{title},excerpt=#{excerpt}, content=#{content, jdbcType=CLOB},parent=#{parent}, categoryid=#{categoryid},lastUpdate=#{lastUpdate}
     where id=#{id}
   </update>
   
   <update id="updateCategory">
     update post set categoryid=#{newCategoryId} where categoryid in 
       <foreach collection="oldCategoryIds" item="item" open="(" separator="," close=")">
        #{item}
       </foreach>
   </update>
   
   <update id="addRcount">
     update post set rcount=rcount+#{count} where id=#{postid}
   </update>
   
   <update id="addCcount">
     update post set ccount=ccount+#{count} where id = (select postid from comment where id=#{commentid} and status='approve')
   </update>

   <delete id="deleteById">
	 delete from post where id = #{id}
  </delete>
	
</mapper>